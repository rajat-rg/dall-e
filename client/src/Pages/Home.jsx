import React, { useState, useEffect } from 'react'
import { Card, FormField, Loader } from '../Components'
const Home = () => {
    const [loading, setLoading] = useState(false);
    const [searchText, setSearchText] = useState('');
    const [searchedResults, setSearchedResults] = useState(null);
    const [searchTimeout, setSearchTimeout] = useState(null);

    const [allPosts, setAllPosts] = useState(null);
    const RenderCards = ({ data, title }) => {
        if (data?.length > 0) { return data.map((post) => <Card key={post._id} {...post}></Card>) }
        return (<h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>)
    }
    useEffect(() => {
        const fetchPosts = async () => {
            try {
                const response = await fetch('http://localhost:8080/api/v1/post',
                    {
                        method: 'GET',
                        headers: { 'Content-Type': 'application/json' }
                    })
                if (response.ok) {
                    const posts = await response.json()
                    setAllPosts(posts.data.reverse())
                }
            } catch (error) {
                alert(error)
            }
        }
        fetchPosts()
    }, [])

    const handleSearcChange = (e) => {
        clearTimeout(searchTimeout)
        setSearchText(e.target.value);
        setSearchTimeout(
            setTimeout(() => {
                const searchRes = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
                setSearchedResults(searchRes)
            }, 500)
        )

    }
    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
                <p className=' mt-2 text-[#666e75] text-[16px] max-w-[500px] '>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
                <div className='mt-16'>
                    <FormField
                    label='search posts'
                    name='text'
                    type='text'
                    placeholder='Search here'
                    value={searchText}
                    handleChange={handleSearcChange} />

                </div>
                <div className='mt-10'>
                    {loading ? (<div className='flex justify-center items-center'><Loader /></div>) : <>{searchText && (<h2 className='font-medium text-[#666e75] text-xl mb-3'>Showing results for <span className='text-[#222328]'>{searchText}</span></h2>)}</>}
                    <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                        {
                            searchText ?
                                (<RenderCards data={searchedResults} title='No search results found' />) :
                                (<RenderCards data={allPosts} title='No posts found' />)
                        }
                    </div>

                </div>
            </div>
        </section>
    )
}

export default Home